// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	testing "testing"

	service "github.com/kujilabo/cocotola-tatoeba-api/src/app/service"
	mock "github.com/stretchr/testify/mock"
)

// TatoebaSentencePair is an autogenerated mock type for the TatoebaSentencePair type
type TatoebaSentencePair struct {
	mock.Mock
}

// GetDst provides a mock function with given fields:
func (_m *TatoebaSentencePair) GetDst() service.TatoebaSentence {
	ret := _m.Called()

	var r0 service.TatoebaSentence
	if rf, ok := ret.Get(0).(func() service.TatoebaSentence); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.TatoebaSentence)
		}
	}

	return r0
}

// GetSrc provides a mock function with given fields:
func (_m *TatoebaSentencePair) GetSrc() service.TatoebaSentence {
	ret := _m.Called()

	var r0 service.TatoebaSentence
	if rf, ok := ret.Get(0).(func() service.TatoebaSentence); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.TatoebaSentence)
		}
	}

	return r0
}

// NewTatoebaSentencePair creates a new instance of TatoebaSentencePair. It also registers a cleanup function to assert the mocks expectations.
func NewTatoebaSentencePair(t testing.TB) *TatoebaSentencePair {
	mock := &TatoebaSentencePair{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
