// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	testing "testing"

	service "github.com/kujilabo/cocotola-tatoeba-api/pkg/service"
	mock "github.com/stretchr/testify/mock"
)

// TatoebaSentencePairSearchResult is an autogenerated mock type for the TatoebaSentencePairSearchResult type
type TatoebaSentencePairSearchResult struct {
	mock.Mock
}

// GetResults provides a mock function with given fields:
func (_m *TatoebaSentencePairSearchResult) GetResults() []service.TatoebaSentencePair {
	ret := _m.Called()

	var r0 []service.TatoebaSentencePair
	if rf, ok := ret.Get(0).(func() []service.TatoebaSentencePair); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]service.TatoebaSentencePair)
		}
	}

	return r0
}

// GetTotalCount provides a mock function with given fields:
func (_m *TatoebaSentencePairSearchResult) GetTotalCount() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NewTatoebaSentencePairSearchResult creates a new instance of TatoebaSentencePairSearchResult. It also registers a cleanup function to assert the mocks expectations.
func NewTatoebaSentencePairSearchResult(t testing.TB) *TatoebaSentencePairSearchResult {
	mock := &TatoebaSentencePairSearchResult{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
